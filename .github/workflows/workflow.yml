name: Deployment Workflow

on: [push]

jobs:

  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./...

  Deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: Test
    environment: tonkla-vm-deploy-env

    steps:
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script_stop: true
          debug: true
          command_timeout: 200m
          script: |
            cd service/prod/tongla-account-backend
            git fetch --all 
            git reset --hard origin/main
            
            cat > .env << EOF
            ENV=production
      
            APP_PORT=8080
            APP_VERSION=${{ github.sha }}
            APP_FRONTEND_PATH=${{ secrets.APP_FRONTEND_PATH }}
            
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_NAME=${{ secrets.DB_NAME }}
            
            SMTP_HOST=${{ secrets.SMTP_HOST }}
            SMTP_SENDER=${{ secrets.SMTP_SENDER }}
            SMTP_PORT=${{ secrets.SMTP_PORT }}
            SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}
            
            SENTRY_DNS=${{ secrets.SENTRY_DNS }}
            EOF

            docker system prune
            docker image prune -a -f
            docker compose up --build -d
          
            echo "Deploy completed!"
